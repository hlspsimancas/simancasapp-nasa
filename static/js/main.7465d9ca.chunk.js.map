{"version":3,"sources":["context/contextNasa.js","context/stateNasa.js","components/DailyNasaInformation.jsx","components/MarsRoverPhotos.jsx","components/MarsRover.jsx","components/layout/Header.jsx","components/layout/SpacialFacts.jsx","components/layout/Station.jsx","components/layout/SearchLook.jsx","components/layout/PrincipalPage.jsx","components/BrowserForm.jsx","components/ImagesNasa.jsx","components/ResultGalery.jsx","components/layout/Spinner.jsx","components/BrowserNasa.jsx","App.js","serviceWorker.js","index.js"],"names":["nasaContext","createContext","StateNasa","props","useState","infoDay","handleInfoDay","marsRover","handlMarsRover","busqueda","year","galeryNasa","handleGaleryNasa","resultGalery","handleResultGalery","error","handleError","spinner","handleSpinner","useEffect","a","Promise","all","axios","get","resultado","resultado2","data","infoOfDay","Number","url","result","makeQuery","Provider","value","children","DailyNasaInformation","useContext","ContextNasa","title","copyright","explanation","className","src","alt","MarsRoverPhotos","photos","MarsRover","Object","keys","length","map","photo","key","id","img_src","Header","type","data-toggle","data-target","aria-expanded","aria-label","to","target","rel","href","SpacialFacts","Station","SearchLook","PrincipalPage","BrowserNasa","contextNasa","search","handleSearch","onChange","e","name","onSubmit","preventDefault","trim","role","placeholder","ImagesNasa","item","links","image","ResultGalery","collection","items","Spinner","BrowserForm","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7465d9ca.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst nasaContext = createContext();\r\nexport default nasaContext;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport nasaContext from './contextNasa';\r\n\r\n\r\nconst StateNasa = props => {\r\n\r\n  \r\n    const [infoDay, handleInfoDay] = useState({});\r\n    const [marsRover, handlMarsRover] = useState({});\r\n    const [galeryNasa, handleGaleryNasa] = useState({\r\n        busqueda: null,\r\n        year: null,        \r\n    });\r\n    const [resultGalery, handleResultGalery] = useState([]);\r\n    const [error, handleError] = useState(false)\r\n    const [spinner, handleSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const infoOfDay = async () => {\r\n            const url = 'https://api.nasa.gov/planetary/apod?api_key=2d1LAVwcZ5pWkWWUANRQQcgtAoZnXT2Z5BhCFpNL';\r\n\r\n            const url2 = 'https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1&api_key=2d1LAVwcZ5pWkWWUANRQQcgtAoZnXT2Z5BhCFpNL';\r\n\r\n\r\n\r\n            const [resultado, resultado2] = await Promise.all([\r\n                axios.get(url),\r\n                axios.get(url2)\r\n            ])\r\n                        \r\n            handleInfoDay(resultado.data)\r\n            handlMarsRover(resultado2.data);\r\n            \r\n        }\r\n\r\n        infoOfDay();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n\r\n        if(galeryNasa.busqueda === null) return;\r\n\r\n        const makeQuery = async () => {\r\n            const { busqueda, year } = galeryNasa;\r\n            Number(year);\r\n            const url = `https://images-api.nasa.gov/search?q=${busqueda}&year_start=${year}&media_type=image`;\r\n            \r\n            const result = await axios.get(url);\r\n            handleResultGalery(result.data);\r\n        }\r\n        makeQuery();\r\n\r\n\r\n    }, [galeryNasa]);\r\n\r\n    return(\r\n        <nasaContext.Provider\r\n            value={{\r\n                infoDay,\r\n                marsRover,\r\n                galeryNasa,\r\n                resultGalery,\r\n                error,\r\n                spinner,\r\n                handleGaleryNasa,\r\n                handleResultGalery,\r\n                handleError,\r\n                handleSpinner\r\n            }}\r\n        >\r\n            {props.children}\r\n        </nasaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StateNasa;","import React, { useContext, Fragment } from 'react';\r\nimport ContextNasa from '../context/contextNasa';\r\n\r\n\r\n\r\nconst DailyNasaInformation = () => {\r\n\r\n\r\n    const contextNasa = useContext(ContextNasa);\r\n    const { infoDay } = contextNasa;\r\n\r\n    const { title, copyright, explanation, url } = infoDay;    \r\n    return ( \r\n        <Fragment>\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-12 col-lg-4\">\r\n                        <h3 className=\"text-center pb-3\">{title}</h3>                    \r\n                        <p className=\"text-justify\">{explanation}</p>\r\n                        <span>{copyright}</span>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-12 col-lg-8\">\r\n                        <img className=\"img-fluid img-daily\" src={url} alt={title} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </Fragment>      \r\n     );\r\n}\r\n \r\nexport default DailyNasaInformation;","import React from 'react';\r\n\r\nconst MarsRoverPhotos = ({ photos }) => {\r\n\r\n    return ( \r\n        \r\n        <img src={photos}  className=\"img-rover mt-1 img-thumbnail\" alt=\"\"/>\r\n     );\r\n}\r\n \r\nexport default MarsRoverPhotos;","import React, { useContext, Fragment } from 'react';\r\nimport ContextNasa from '../context/contextNasa';\r\nimport MarsRoverPhotos from './MarsRoverPhotos';\r\n\r\nconst MarsRover = () => {\r\n\r\n    const contextNasa = useContext(ContextNasa);\r\n    const {marsRover} = contextNasa;\r\n    \r\n    \r\n    if(Object.keys(marsRover).length === 0) return null;\r\n\r\n    return ( \r\n    <Fragment>\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-center\">                                                        \r\n                <div className=\"col-12 col-sm-12 col-lg-6\">\r\n                    <div className=\"row justify-content-center\">\r\n                        {marsRover.photos.map(photo => (\r\n                            <div className=\"col-6 col-sm-4 col-md-3\">\r\n                                <MarsRoverPhotos\r\n                                    key={photo.id} \r\n                                    photos={photo.img_src}\r\n                                />\r\n                            </div>                        \r\n                        ))}  \r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-4 mt-sm-4 mt-lg-0 col-12 col-sm-12 col-lg-6\">\r\n                    <h2 className=\"text-center\">Images taken by Mars Rover</h2>\r\n                    <p className=\"text-justify\">The Mars Science Laboratory and its rover centerpiece, Curiosity, is the most ambitious Mars mission yet flown by NASA. The rover landed on Mars in 2012 with a primary mission to find out if Mars is, or was, suitable for life. Another objective is to learn more about the Red Planet's environment. In March 2018, it celebrated 2,000 sols (Mars days) on the planet, making its way from Gale Crater to Aeolis Mons (colloquially called Mount Sharp), where it has looked at geological information embedded in the mountain's layers. Along the way, it also has found extensive evidence of past water and geological change.</p>\r\n                </div>\r\n            </div>\r\n        </div>        \r\n    </Fragment>        \r\n     );\r\n}\r\n \r\nexport default MarsRover;","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light justify-content-center text-center mb-3\">\r\n            <button className=\"navbar-toggler mt-3\" type=\"button\" data-toggle=\"collapse\" data-target=\"#nav-principal\"  aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div id=\"nav-principal\" className=\"collapse text-center navbar-collapse\">\r\n                <nav className=\"navegacion-principal     nav justify-content-between container flex-row flex-md-row text-center mt-3\">\r\n                    <Link to=\"/\" className=\"text-center linkedit\">\r\n                        Inicio\r\n                    </Link>\r\n                    <Link to=\"/marsRover\" className=\"text-center linkedit\">\r\n                        Mars Rover\r\n                    </Link>\r\n                    <Link to=\"/dailyNasa\" className=\"text-center linkedit\">\r\n                        Daily Nasa\r\n                    </Link>\r\n                    <Link to=\"/spaceGalery\" className=\"text-center linkedit\">\r\n                        Galery browser\r\n                    </Link>\r\n                </nav>\r\n            </div>\r\n        </nav>\r\n            <div className=\"bg-space-img\">\r\n                <div className=\"card-home\">\r\n                    <h2 className=\"text-center title-space\">Nasa Information</h2>\r\n                    <h5 className=\"text-center\">take a look about space, photos, rovers and more!</h5>                    \r\n                    <span className=\"size-iconcs\">\r\n                        <a target='_blank' rel=\"noopener noreferrer\" href=\"http://www.facebook.com/hlspsimancas\"><i className=\"fa fa-facebook-square\"></i></a> \r\n                        <a target='_blank' rel=\"noopener noreferrer\" href=\"http://www.twitter.com/simancashl\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a target='_blank' rel=\"noopener noreferrer\" href=\"http://www.instagram.com/simancasart\"><i className=\"fa fa-instagram\"></i></a>\r\n                    </span>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </Fragment> \r\n     );\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nconst SpacialFacts = () => {\r\n    return ( \r\n        <div className=\"container-fluid facts-space\">\r\n            <div className=\"row justify-content-center align-items-center\">\r\n                <div className=\"col-6 text-center\">\r\n                    <div className=\"img-astronaunt\"></div>\r\n                </div>\r\n                <div className=\"col-6 text-center bg-titles-facts\">\r\n                    <h3>Did you know that...?</h3> \r\n\r\n                    <p>THE HOTTEST PLANET IN OUR SOLAR SYSTEM IS 450° C.</p> \r\n                    <p>SPACE IS COMPLETELY SILENT  </p>                      \r\n                    <p>HALLEYS COMET WON’T ORBIT PAST EARTH AGAIN UNTIL 2061</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SpacialFacts;","import React from 'react'\r\n\r\nconst Station = () => {\r\n    return ( \r\n        <div className=\"container my-5\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-12 col-md-6 text-center\">\r\n                    <h3>International Space Station (ISS)</h3>\r\n                    <p>The 20th ISS is comming on</p>    \r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"iss-bg img-thumbnail\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Station;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst SearchLook = () => {\r\n    return ( \r\n        <div className=\"container-fluid my-5\">\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-12 col-md-4 mb-3 text-center sectionButton\">\r\n                    <h3>Look all the Nasa galery</h3>\r\n                    <p>photos about everything on space</p>\r\n                    <Link to={'/spaceGalery'} className=\"btn btn-primary px-5\">Go there</Link>\r\n                </div>\r\n                <div className=\"col-12 col-md-8\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-12 col-sm-5 searchNasaGalery text-center\">\r\n                            <h4>Apollo</h4>\r\n                            <span className=\"serch-icons\">\r\n                                <i className=\"fa fa-rocket\"></i>\r\n                            </span>\r\n                            <p>all the images about this glorius project and their amaizing goals</p>\r\n                        </div>\r\n                        <div className=\"my-2 my-sm-0 col-12 col-sm-5 searchNasaGalery text-center\">\r\n                            <h4>Moon</h4>\r\n                            <span className=\"serch-icons\">\r\n                                <i className=\"fa fa-asterisk\"></i>\r\n                            </span>\r\n                            <p>get a lot pictures about your favorites planets in different times</p>\r\n                        </div>\r\n                        <div className=\"col-sm-8 mt-sm-3 searchNasaGalery text-center\">\r\n                            <h4>Galaxies</h4>\r\n                            <span className=\"serch-icons\">\r\n                                <i className=\"fa fa-star\"></i>\r\n                            </span>\r\n                            <p>galaxies, stars, planets and more are waiting for you</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SearchLook;","import React, { Fragment } from 'react';\r\nimport SpacialFacts from './SpacialFacts';\r\nimport Station from './Station';\r\nimport SearchLook from './SearchLook';\r\n\r\nconst PrincipalPage = () => {\r\n    return (\r\n        <Fragment>\r\n            <SpacialFacts />\r\n            <Station />\r\n            <SearchLook />\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default PrincipalPage;","import React from 'react';\r\nimport { useContext, useState } from 'react';\r\nimport ContextNasa from '../context/contextNasa';\r\n\r\nconst BrowserNasa = () => {\r\n\r\n    const contextNasa = useContext(ContextNasa);\r\n    const { handleGaleryNasa, handleResultGalery, handleError, error, handleSpinner } = contextNasa;\r\n\r\n    const [search, handleSearch] = useState({\r\n        busqueda: '',\r\n        year: '2020'\r\n    })\r\n\r\n    \r\n    \r\n    const onChange = (e) => {\r\n        handleSearch({\r\n            ...search,\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n\r\n    const { busqueda, year } = search;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(busqueda.trim() === '' || year.trim() === '') {\r\n            handleError(true)\r\n            return;\r\n        }\r\n        handleSpinner(true);\r\n\r\n        handleError(false);\r\n        handleResultGalery([]);\r\n\r\n        handleGaleryNasa({\r\n            busqueda,\r\n            year\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <div className=\"form-group\">\r\n                {(error) ? <p className=\"alert alert-danger text-center\" role=\"alert\">Add something to search for</p> : null}\r\n                <label className=\"h4\">What do you want to look for?</label>\r\n                <input type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Ex. Moon...\" \r\n                    name=\"busqueda\"\r\n                    value={busqueda}\r\n                    onChange={onChange}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <select \r\n                    name=\"year\" \r\n                    className=\"form-control\"\r\n                    onChange={onChange}\r\n                    value={year}\r\n                >\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2000\">2000</option>\r\n                    <option value=\"1990\">1990</option>                                        \r\n                </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn px-4 btn-secondary\">Look!</button>\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default BrowserNasa;","import React from 'react';\r\n\r\n\r\nconst ImagesNasa = ({item}) => {\r\n\r\n\r\n    return ( \r\n        item.links.map(image => (\r\n            <img src={image.href} alt={item.data.title} className=\"img-Nasa mt-2\"/>\r\n        ))\r\n     );\r\n}\r\n \r\nexport default ImagesNasa;","import React, { useContext } from 'react';\r\nimport ContextNasa from '../context/contextNasa';\r\nimport ImagesNasa from './ImagesNasa';\r\n\r\nconst ResultGalery = () => {\r\n\r\n    const contextNasa = useContext(ContextNasa);\r\n    const { resultGalery, handleSpinner } = contextNasa;\r\n    \r\n\r\n\r\n    if(Object.keys(resultGalery).length === 0) return null;\r\n\r\n    handleSpinner(false);\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"row\">            \r\n                {resultGalery.collection.items.map(item => (\r\n            <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\">\r\n                    <ImagesNasa \r\n                        item={item}\r\n                        key={item}\r\n                    />\r\n            </div>                         \r\n                ))}       \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default ResultGalery;","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"spinner\"></div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","import React, { Fragment, useContext } from 'react';\r\nimport BrowserForm from './BrowserForm';\r\nimport ResultGalery from './ResultGalery';\r\nimport Spinner from './layout/Spinner';\r\nimport ContextNasa from '../context/contextNasa';\r\n\r\nconst BrowserNasa = () => {\r\n\r\n    const contextNasa = useContext(ContextNasa);\r\n    const { spinner } = contextNasa;\r\n    return (\r\n        <Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <BrowserForm />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-6\">\r\n                        {(spinner) ? <Spinner /> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12\">\r\n                        <ResultGalery />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment> \r\n     );\r\n}\r\n \r\nexport default BrowserNasa;","import React from 'react';\nimport StateNasa from './context/stateNasa';\nimport DailyNasaInformation from './components/DailyNasaInformation';\nimport MarsRover from './components/MarsRover';\nimport Header from './components/layout/Header';\nimport PrincipalPage from './components/layout/PrincipalPage';\nimport BrowserNasa from './components/BrowserNasa';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    \n      <Router>\n          <Header />\n\n          <Switch>\n            <StateNasa>\n              <Route exact path=\"/\" component={PrincipalPage} />\n              <Route exact path=\"/marsRover\" component={MarsRover} />\n              <Route exact path=\"/dailyNasa\" component={DailyNasaInformation} />\n              <Route exact path=\"/spaceGalery\" component={BrowserNasa} />\n            </StateNasa>\n          </Switch>  \n      </Router>      \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}